--
-- PostgreSQL database dump
--

-- Dumped from database version 17rc1
-- Dumped by pg_dump version 17rc1

SET statement_timeout = 0;
SET lock_timeout = 0;
SET idle_in_transaction_session_timeout = 0;
SET transaction_timeout = 0;
SET client_encoding = 'UTF8';
SET standard_conforming_strings = on;
SELECT pg_catalog.set_config('search_path', '', false);
SET check_function_bodies = false;
SET xmloption = content;
SET client_min_messages = warning;
SET row_security = off;

SET default_tablespace = '';

SET default_table_access_method = heap;

--
-- Name: auth_group; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.auth_group (
    id integer NOT NULL,
    name character varying(150) NOT NULL
);


ALTER TABLE public.auth_group OWNER TO postgres;

--
-- Name: auth_group_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

ALTER TABLE public.auth_group ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.auth_group_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: auth_group_permissions; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.auth_group_permissions (
    id bigint NOT NULL,
    group_id integer NOT NULL,
    permission_id integer NOT NULL
);


ALTER TABLE public.auth_group_permissions OWNER TO postgres;

--
-- Name: auth_group_permissions_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

ALTER TABLE public.auth_group_permissions ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.auth_group_permissions_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: auth_permission; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.auth_permission (
    id integer NOT NULL,
    name character varying(255) NOT NULL,
    content_type_id integer NOT NULL,
    codename character varying(100) NOT NULL
);


ALTER TABLE public.auth_permission OWNER TO postgres;

--
-- Name: auth_permission_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

ALTER TABLE public.auth_permission ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.auth_permission_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: auth_user; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.auth_user (
    id integer NOT NULL,
    password character varying(128) NOT NULL,
    last_login timestamp with time zone,
    is_superuser boolean NOT NULL,
    username character varying(150) NOT NULL,
    first_name character varying(150) NOT NULL,
    last_name character varying(150) NOT NULL,
    email character varying(254) NOT NULL,
    is_staff boolean NOT NULL,
    is_active boolean NOT NULL,
    date_joined timestamp with time zone NOT NULL
);


ALTER TABLE public.auth_user OWNER TO postgres;

--
-- Name: auth_user_groups; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.auth_user_groups (
    id bigint NOT NULL,
    user_id integer NOT NULL,
    group_id integer NOT NULL
);


ALTER TABLE public.auth_user_groups OWNER TO postgres;

--
-- Name: auth_user_groups_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

ALTER TABLE public.auth_user_groups ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.auth_user_groups_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: auth_user_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

ALTER TABLE public.auth_user ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.auth_user_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: auth_user_user_permissions; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.auth_user_user_permissions (
    id bigint NOT NULL,
    user_id integer NOT NULL,
    permission_id integer NOT NULL
);


ALTER TABLE public.auth_user_user_permissions OWNER TO postgres;

--
-- Name: auth_user_user_permissions_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

ALTER TABLE public.auth_user_user_permissions ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.auth_user_user_permissions_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: comment_table; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.comment_table (
    query_id integer,
    comment_id integer NOT NULL,
    email character varying(255) NOT NULL,
    comment text NOT NULL,
    "timestamp" timestamp without time zone DEFAULT CURRENT_TIMESTAMP
);


ALTER TABLE public.comment_table OWNER TO postgres;

--
-- Name: comment_table_comment_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE public.comment_table_comment_id_seq
    AS integer
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER SEQUENCE public.comment_table_comment_id_seq OWNER TO postgres;

--
-- Name: comment_table_comment_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: postgres
--

ALTER SEQUENCE public.comment_table_comment_id_seq OWNED BY public.comment_table.comment_id;


--
-- Name: django_admin_log; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.django_admin_log (
    id integer NOT NULL,
    action_time timestamp with time zone NOT NULL,
    object_id text,
    object_repr character varying(200) NOT NULL,
    action_flag smallint NOT NULL,
    change_message text NOT NULL,
    content_type_id integer,
    user_id integer NOT NULL,
    CONSTRAINT django_admin_log_action_flag_check CHECK ((action_flag >= 0))
);


ALTER TABLE public.django_admin_log OWNER TO postgres;

--
-- Name: django_admin_log_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

ALTER TABLE public.django_admin_log ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.django_admin_log_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: django_content_type; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.django_content_type (
    id integer NOT NULL,
    app_label character varying(100) NOT NULL,
    model character varying(100) NOT NULL
);


ALTER TABLE public.django_content_type OWNER TO postgres;

--
-- Name: django_content_type_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

ALTER TABLE public.django_content_type ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.django_content_type_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: django_migrations; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.django_migrations (
    id bigint NOT NULL,
    app character varying(255) NOT NULL,
    name character varying(255) NOT NULL,
    applied timestamp with time zone NOT NULL
);


ALTER TABLE public.django_migrations OWNER TO postgres;

--
-- Name: django_migrations_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

ALTER TABLE public.django_migrations ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.django_migrations_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: django_session; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.django_session (
    session_key character varying(40) NOT NULL,
    session_data text NOT NULL,
    expire_date timestamp with time zone NOT NULL
);


ALTER TABLE public.django_session OWNER TO postgres;

--
-- Name: doubt_table; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.doubt_table (
    student_id integer,
    course_id character(4) NOT NULL,
    topic_id integer,
    ta_id integer,
    query_id integer NOT NULL,
    query text NOT NULL,
    ans text,
    status boolean DEFAULT false,
    votes integer DEFAULT 0,
    CONSTRAINT doubt_table_topic_id_check CHECK (((topic_id >= 1) AND (topic_id <= 15)))
);


ALTER TABLE public.doubt_table OWNER TO postgres;

--
-- Name: doubt_table_query_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE public.doubt_table_query_id_seq
    AS integer
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER SEQUENCE public.doubt_table_query_id_seq OWNER TO postgres;

--
-- Name: doubt_table_query_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: postgres
--

ALTER SEQUENCE public.doubt_table_query_id_seq OWNED BY public.doubt_table.query_id;


--
-- Name: faculty_table; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.faculty_table (
    faculty_id character(3) NOT NULL,
    email character varying(255) NOT NULL,
    course_id character(4) NOT NULL,
    faculty_uuid uuid DEFAULT gen_random_uuid() NOT NULL
);


ALTER TABLE public.faculty_table OWNER TO postgres;

--
-- Name: student_table; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.student_table (
    student_id integer NOT NULL,
    email character varying(255) NOT NULL,
    course_id character(4) NOT NULL,
    student_uuid uuid DEFAULT gen_random_uuid() NOT NULL
);


ALTER TABLE public.student_table OWNER TO postgres;

--
-- Name: student_table_student_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE public.student_table_student_id_seq
    AS integer
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER SEQUENCE public.student_table_student_id_seq OWNER TO postgres;

--
-- Name: student_table_student_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: postgres
--

ALTER SEQUENCE public.student_table_student_id_seq OWNED BY public.student_table.student_id;


--
-- Name: ta_table; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.ta_table (
    ta_id integer NOT NULL,
    email character varying(255) NOT NULL,
    course_id character(4) NOT NULL,
    topic_id integer,
    ta_uuid uuid DEFAULT gen_random_uuid() NOT NULL,
    CONSTRAINT ta_table_topic_id_check CHECK (((topic_id >= 1) AND (topic_id <= 15)))
);


ALTER TABLE public.ta_table OWNER TO postgres;

--
-- Name: ta_table_ta_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE public.ta_table_ta_id_seq
    AS integer
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER SEQUENCE public.ta_table_ta_id_seq OWNER TO postgres;

--
-- Name: ta_table_ta_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: postgres
--

ALTER SEQUENCE public.ta_table_ta_id_seq OWNED BY public.ta_table.ta_id;


--
-- Name: topics_table; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.topics_table (
    course_id character(4) NOT NULL,
    topics character varying[] NOT NULL,
    topic_ids integer[] NOT NULL
);


ALTER TABLE public.topics_table OWNER TO postgres;

--
-- Name: user_table; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.user_table (
    email character varying(255) NOT NULL,
    name character varying(255) NOT NULL,
    role character varying(20),
    CONSTRAINT user_table_role_check CHECK (((role)::text = ANY ((ARRAY['student'::character varying, 'TA'::character varying, 'faculty'::character varying])::text[])))
);


ALTER TABLE public.user_table OWNER TO postgres;

--
-- Name: comment_table comment_id; Type: DEFAULT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.comment_table ALTER COLUMN comment_id SET DEFAULT nextval('public.comment_table_comment_id_seq'::regclass);


--
-- Name: doubt_table query_id; Type: DEFAULT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.doubt_table ALTER COLUMN query_id SET DEFAULT nextval('public.doubt_table_query_id_seq'::regclass);


--
-- Name: student_table student_id; Type: DEFAULT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.student_table ALTER COLUMN student_id SET DEFAULT nextval('public.student_table_student_id_seq'::regclass);


--
-- Name: ta_table ta_id; Type: DEFAULT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.ta_table ALTER COLUMN ta_id SET DEFAULT nextval('public.ta_table_ta_id_seq'::regclass);


--
-- Data for Name: auth_group; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.auth_group (id, name) FROM stdin;
\.


--
-- Data for Name: auth_group_permissions; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.auth_group_permissions (id, group_id, permission_id) FROM stdin;
\.


--
-- Data for Name: auth_permission; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.auth_permission (id, name, content_type_id, codename) FROM stdin;
1	Can add log entry	1	add_logentry
2	Can change log entry	1	change_logentry
3	Can delete log entry	1	delete_logentry
4	Can view log entry	1	view_logentry
5	Can add permission	2	add_permission
6	Can change permission	2	change_permission
7	Can delete permission	2	delete_permission
8	Can view permission	2	view_permission
9	Can add group	3	add_group
10	Can change group	3	change_group
11	Can delete group	3	delete_group
12	Can view group	3	view_group
13	Can add user	4	add_user
14	Can change user	4	change_user
15	Can delete user	4	delete_user
16	Can view user	4	view_user
17	Can add content type	5	add_contenttype
18	Can change content type	5	change_contenttype
19	Can delete content type	5	delete_contenttype
20	Can view content type	5	view_contenttype
21	Can add session	6	add_session
22	Can change session	6	change_session
23	Can delete session	6	delete_session
24	Can view session	6	view_session
25	Can add auth group	7	add_authgroup
26	Can change auth group	7	change_authgroup
27	Can delete auth group	7	delete_authgroup
28	Can view auth group	7	view_authgroup
29	Can add auth group permissions	8	add_authgrouppermissions
30	Can change auth group permissions	8	change_authgrouppermissions
31	Can delete auth group permissions	8	delete_authgrouppermissions
32	Can view auth group permissions	8	view_authgrouppermissions
33	Can add auth permission	9	add_authpermission
34	Can change auth permission	9	change_authpermission
35	Can delete auth permission	9	delete_authpermission
36	Can view auth permission	9	view_authpermission
37	Can add auth user	10	add_authuser
38	Can change auth user	10	change_authuser
39	Can delete auth user	10	delete_authuser
40	Can view auth user	10	view_authuser
41	Can add auth user groups	11	add_authusergroups
42	Can change auth user groups	11	change_authusergroups
43	Can delete auth user groups	11	delete_authusergroups
44	Can view auth user groups	11	view_authusergroups
45	Can add auth user user permissions	12	add_authuseruserpermissions
46	Can change auth user user permissions	12	change_authuseruserpermissions
47	Can delete auth user user permissions	12	delete_authuseruserpermissions
48	Can view auth user user permissions	12	view_authuseruserpermissions
49	Can add django admin log	13	add_djangoadminlog
50	Can change django admin log	13	change_djangoadminlog
51	Can delete django admin log	13	delete_djangoadminlog
52	Can view django admin log	13	view_djangoadminlog
53	Can add django content type	14	add_djangocontenttype
54	Can change django content type	14	change_djangocontenttype
55	Can delete django content type	14	delete_djangocontenttype
56	Can view django content type	14	view_djangocontenttype
57	Can add django migrations	15	add_djangomigrations
58	Can change django migrations	15	change_djangomigrations
59	Can delete django migrations	15	delete_djangomigrations
60	Can view django migrations	15	view_djangomigrations
61	Can add django session	16	add_djangosession
62	Can change django session	16	change_djangosession
63	Can delete django session	16	delete_djangosession
64	Can view django session	16	view_djangosession
65	Can add my table	17	add_mytable
66	Can change my table	17	change_mytable
67	Can delete my table	17	delete_mytable
68	Can view my table	17	view_mytable
69	Can add main table	18	add_maintable
70	Can change main table	18	change_maintable
71	Can delete main table	18	delete_maintable
72	Can view main table	18	view_maintable
73	Can add comment table	19	add_commenttable
74	Can change comment table	19	change_commenttable
75	Can delete comment table	19	delete_commenttable
76	Can view comment table	19	view_commenttable
77	Can add doubt table	20	add_doubttable
78	Can change doubt table	20	change_doubttable
79	Can delete doubt table	20	delete_doubttable
80	Can view doubt table	20	view_doubttable
81	Can add faculty table	21	add_facultytable
82	Can change faculty table	21	change_facultytable
83	Can delete faculty table	21	delete_facultytable
84	Can view faculty table	21	view_facultytable
85	Can add student table	22	add_studenttable
86	Can change student table	22	change_studenttable
87	Can delete student table	22	delete_studenttable
88	Can view student table	22	view_studenttable
89	Can add ta table	23	add_tatable
90	Can change ta table	23	change_tatable
91	Can delete ta table	23	delete_tatable
92	Can view ta table	23	view_tatable
93	Can add user table	24	add_usertable
94	Can change user table	24	change_usertable
95	Can delete user table	24	delete_usertable
96	Can view user table	24	view_usertable
97	Can add topics table	25	add_topicstable
98	Can change topics table	25	change_topicstable
99	Can delete topics table	25	delete_topicstable
100	Can view topics table	25	view_topicstable
\.


--
-- Data for Name: auth_user; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.auth_user (id, password, last_login, is_superuser, username, first_name, last_name, email, is_staff, is_active, date_joined) FROM stdin;
\.


--
-- Data for Name: auth_user_groups; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.auth_user_groups (id, user_id, group_id) FROM stdin;
\.


--
-- Data for Name: auth_user_user_permissions; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.auth_user_user_permissions (id, user_id, permission_id) FROM stdin;
\.


--
-- Data for Name: comment_table; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.comment_table (query_id, comment_id, email, comment, "timestamp") FROM stdin;
1	1	student2@example.com	I also have the same question.	2024-10-31 10:15:00
2	2	ta2@example.com	Please clarify your question.	2024-10-31 11:00:00
3	3	student3@example.com	This was helpful, thanks!	2024-10-31 12:20:00
4	4	student1@example.com	I found an alternative solution.	2024-10-31 13:45:00
5	5	faculty1@example.com	Great question!	2024-10-31 14:30:00
1	8	student10@example.com	Was pretty helpful, Thanks	2024-10-31 15:15:00
\.


--
-- Data for Name: django_admin_log; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.django_admin_log (id, action_time, object_id, object_repr, action_flag, change_message, content_type_id, user_id) FROM stdin;
\.


--
-- Data for Name: django_content_type; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.django_content_type (id, app_label, model) FROM stdin;
1	admin	logentry
2	auth	permission
3	auth	group
4	auth	user
5	contenttypes	contenttype
6	sessions	session
7	first_app	authgroup
8	first_app	authgrouppermissions
9	first_app	authpermission
10	first_app	authuser
11	first_app	authusergroups
12	first_app	authuseruserpermissions
13	first_app	djangoadminlog
14	first_app	djangocontenttype
15	first_app	djangomigrations
16	first_app	djangosession
17	first_app	mytable
18	first_app	maintable
19	first_app	commenttable
20	first_app	doubttable
21	first_app	facultytable
22	first_app	studenttable
23	first_app	tatable
24	first_app	usertable
25	first_app	topicstable
\.


--
-- Data for Name: django_migrations; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.django_migrations (id, app, name, applied) FROM stdin;
1	contenttypes	0001_initial	2024-11-02 16:22:24.317843+05:30
2	auth	0001_initial	2024-11-02 16:22:24.384697+05:30
3	admin	0001_initial	2024-11-02 16:22:24.403093+05:30
4	admin	0002_logentry_remove_auto_add	2024-11-02 16:22:24.40928+05:30
5	admin	0003_logentry_add_action_flag_choices	2024-11-02 16:22:24.416667+05:30
6	contenttypes	0002_remove_content_type_name	2024-11-02 16:22:24.431345+05:30
7	auth	0002_alter_permission_name_max_length	2024-11-02 16:22:24.437019+05:30
8	auth	0003_alter_user_email_max_length	2024-11-02 16:22:24.442417+05:30
9	auth	0004_alter_user_username_opts	2024-11-02 16:22:24.449209+05:30
10	auth	0005_alter_user_last_login_null	2024-11-02 16:22:24.457189+05:30
11	auth	0006_require_contenttypes_0002	2024-11-02 16:22:24.458197+05:30
12	auth	0007_alter_validators_add_error_messages	2024-11-02 16:22:24.462657+05:30
13	auth	0008_alter_user_username_max_length	2024-11-02 16:22:24.472987+05:30
14	auth	0009_alter_user_last_name_max_length	2024-11-02 16:22:24.482391+05:30
15	auth	0010_alter_group_name_max_length	2024-11-02 16:22:24.489632+05:30
16	auth	0011_update_proxy_permissions	2024-11-02 16:22:24.49124+05:30
17	auth	0012_alter_user_first_name_max_length	2024-11-02 16:22:24.499009+05:30
18	sessions	0001_initial	2024-11-02 16:22:24.510033+05:30
19	first_app	0001_initial	2024-11-02 16:25:00.265063+05:30
20	first_app	0002_maintable	2024-11-04 12:31:03.143477+05:30
21	first_app	0003_delete_mytable	2024-11-08 16:22:07.760863+05:30
22	first_app	0004_mytable	2024-11-08 16:27:45.973643+05:30
23	first_app	0005_commenttable_doubttable_facultytable_studenttable_and_more	2024-11-08 21:57:03.33147+05:30
24	first_app	0006_topicstable	2024-11-08 22:04:21.868906+05:30
\.


--
-- Data for Name: django_session; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.django_session (session_key, session_data, expire_date) FROM stdin;
\.


--
-- Data for Name: doubt_table; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.doubt_table (student_id, course_id, topic_id, ta_id, query_id, query, ans, status, votes) FROM stdin;
1	1001	3	1	1	How to implement inheritance in OOP?	\N	f	0
2	1002	5	2	2	Can you explain relational databases?	Sure, let me help.	t	5
3	1003	7	3	3	What is normalization?	\N	f	3
4	1001	2	1	4	How do I set up a virtual environment in Python?	Use virtualenv.	t	10
5	1002	6	2	5	What is the difference between a list and a tuple?	\N	f	1
1	1005	13	4	8	What is backtracking?		f	0
1	1001	3	1	6	What is DBMS?		f	\N
\.


--
-- Data for Name: faculty_table; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.faculty_table (faculty_id, email, course_id, faculty_uuid) FROM stdin;
101	faculty1@example.com	1001	f307d8bc-0c6d-4acf-9c42-e5518ec47293
102	faculty2@example.com	1002	31a418b7-c282-4faa-b50a-2bad1fed3a5c
103	faculty3@example.com	1003	370b7c2d-8a9b-4ac2-907c-4f31da30514e
\.


--
-- Data for Name: student_table; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.student_table (student_id, email, course_id, student_uuid) FROM stdin;
1	student1@example.com	1001	f8b6963f-ecae-4cc0-9b21-b212b0100697
2	student2@example.com	1002	05777340-52e6-4fc5-b6e6-996f2729e3b6
3	student3@example.com	1003	6fedfb80-d027-4361-baf0-94edb209562c
4	student4@example.com	1001	ed55f8fb-f15c-4bff-81e8-3bae34fb1a3a
5	student5@example.com	1002	eeb6378e-d965-4c99-b8cb-46b85b15b19b
8	student8@example.com	1001	1f8780af-577e-48f7-a6c0-9de081e725bf
1	student1@example.com	1006	3d12fa8f-6709-4123-a5c1-a825009375d5
\.


--
-- Data for Name: ta_table; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.ta_table (ta_id, email, course_id, topic_id, ta_uuid) FROM stdin;
1	ta1@example.com	1001	3	a71ce9f3-3908-4334-8742-8758263b5de8
2	ta2@example.com	1002	5	b14ef8f2-6809-48f1-a360-388f4c1182d8
3	ta3@example.com	1003	7	fb8478f7-fea2-44e6-8d33-008bd998177b
4	ta4@example.com	1001	2	b480db82-9f87-4281-9f34-9eabbc6bcb06
5	ta5@example.com	1002	6	5a1fb6c6-50b7-4889-b1e7-a9d170ceb5cf
7	ta7@example.com	1001	14	b0005536-7b33-446e-9eb7-6d559717efd5
\.


--
-- Data for Name: topics_table; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.topics_table (course_id, topics, topic_ids) FROM stdin;
1001	{"Introduction to Programming","Data Structures",Algorithms}	{1,2,3}
1002	{"Database Fundamentals","SQL Basics",Normalization}	{4,5,6}
1003	{"Operating Systems","Memory Management",Concurrency}	{7,8,9}
1004	{Networks,TCP/IP,"Network Security"}	{10,11,12}
1005	{"Machine Learning Basics","Supervised Learning","Unsupervised Learning"}	{13,14,15}
\.


--
-- Data for Name: user_table; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.user_table (email, name, role) FROM stdin;
student1@example.com	Alice	student
student2@example.com	Bob	student
ta1@example.com	Charles	TA
faculty1@example.com	Dr. Smith	faculty
faculty2@example.com	Dr. Johnson	faculty
new_user@example.in	New user	student
\.


--
-- Name: auth_group_id_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('public.auth_group_id_seq', 1, false);


--
-- Name: auth_group_permissions_id_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('public.auth_group_permissions_id_seq', 1, false);


--
-- Name: auth_permission_id_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('public.auth_permission_id_seq', 100, true);


--
-- Name: auth_user_groups_id_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('public.auth_user_groups_id_seq', 1, false);


--
-- Name: auth_user_id_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('public.auth_user_id_seq', 1, false);


--
-- Name: auth_user_user_permissions_id_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('public.auth_user_user_permissions_id_seq', 1, false);


--
-- Name: comment_table_comment_id_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('public.comment_table_comment_id_seq', 5, true);


--
-- Name: django_admin_log_id_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('public.django_admin_log_id_seq', 1, false);


--
-- Name: django_content_type_id_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('public.django_content_type_id_seq', 25, true);


--
-- Name: django_migrations_id_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('public.django_migrations_id_seq', 24, true);


--
-- Name: doubt_table_query_id_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('public.doubt_table_query_id_seq', 6, true);


--
-- Name: student_table_student_id_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('public.student_table_student_id_seq', 1, false);


--
-- Name: ta_table_ta_id_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('public.ta_table_ta_id_seq', 1, false);


--
-- Name: auth_group auth_group_name_key; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.auth_group
    ADD CONSTRAINT auth_group_name_key UNIQUE (name);


--
-- Name: auth_group_permissions auth_group_permissions_group_id_permission_id_0cd325b0_uniq; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.auth_group_permissions
    ADD CONSTRAINT auth_group_permissions_group_id_permission_id_0cd325b0_uniq UNIQUE (group_id, permission_id);


--
-- Name: auth_group_permissions auth_group_permissions_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.auth_group_permissions
    ADD CONSTRAINT auth_group_permissions_pkey PRIMARY KEY (id);


--
-- Name: auth_group auth_group_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.auth_group
    ADD CONSTRAINT auth_group_pkey PRIMARY KEY (id);


--
-- Name: auth_permission auth_permission_content_type_id_codename_01ab375a_uniq; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.auth_permission
    ADD CONSTRAINT auth_permission_content_type_id_codename_01ab375a_uniq UNIQUE (content_type_id, codename);


--
-- Name: auth_permission auth_permission_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.auth_permission
    ADD CONSTRAINT auth_permission_pkey PRIMARY KEY (id);


--
-- Name: auth_user_groups auth_user_groups_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.auth_user_groups
    ADD CONSTRAINT auth_user_groups_pkey PRIMARY KEY (id);


--
-- Name: auth_user_groups auth_user_groups_user_id_group_id_94350c0c_uniq; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.auth_user_groups
    ADD CONSTRAINT auth_user_groups_user_id_group_id_94350c0c_uniq UNIQUE (user_id, group_id);


--
-- Name: auth_user auth_user_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.auth_user
    ADD CONSTRAINT auth_user_pkey PRIMARY KEY (id);


--
-- Name: auth_user_user_permissions auth_user_user_permissions_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.auth_user_user_permissions
    ADD CONSTRAINT auth_user_user_permissions_pkey PRIMARY KEY (id);


--
-- Name: auth_user_user_permissions auth_user_user_permissions_user_id_permission_id_14a6b632_uniq; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.auth_user_user_permissions
    ADD CONSTRAINT auth_user_user_permissions_user_id_permission_id_14a6b632_uniq UNIQUE (user_id, permission_id);


--
-- Name: auth_user auth_user_username_key; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.auth_user
    ADD CONSTRAINT auth_user_username_key UNIQUE (username);


--
-- Name: comment_table comment_table_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.comment_table
    ADD CONSTRAINT comment_table_pkey PRIMARY KEY (comment_id);


--
-- Name: django_admin_log django_admin_log_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.django_admin_log
    ADD CONSTRAINT django_admin_log_pkey PRIMARY KEY (id);


--
-- Name: django_content_type django_content_type_app_label_model_76bd3d3b_uniq; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.django_content_type
    ADD CONSTRAINT django_content_type_app_label_model_76bd3d3b_uniq UNIQUE (app_label, model);


--
-- Name: django_content_type django_content_type_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.django_content_type
    ADD CONSTRAINT django_content_type_pkey PRIMARY KEY (id);


--
-- Name: django_migrations django_migrations_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.django_migrations
    ADD CONSTRAINT django_migrations_pkey PRIMARY KEY (id);


--
-- Name: django_session django_session_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.django_session
    ADD CONSTRAINT django_session_pkey PRIMARY KEY (session_key);


--
-- Name: doubt_table doubt_table_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.doubt_table
    ADD CONSTRAINT doubt_table_pkey PRIMARY KEY (query_id);


--
-- Name: faculty_table faculty_table_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.faculty_table
    ADD CONSTRAINT faculty_table_pkey PRIMARY KEY (faculty_uuid);


--
-- Name: student_table student_table_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.student_table
    ADD CONSTRAINT student_table_pkey PRIMARY KEY (student_uuid);


--
-- Name: ta_table ta_table_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.ta_table
    ADD CONSTRAINT ta_table_pkey PRIMARY KEY (ta_uuid);


--
-- Name: topics_table topics_table_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.topics_table
    ADD CONSTRAINT topics_table_pkey PRIMARY KEY (course_id);


--
-- Name: user_table user_table_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.user_table
    ADD CONSTRAINT user_table_pkey PRIMARY KEY (email);


--
-- Name: auth_group_name_a6ea08ec_like; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX auth_group_name_a6ea08ec_like ON public.auth_group USING btree (name varchar_pattern_ops);


--
-- Name: auth_group_permissions_group_id_b120cbf9; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX auth_group_permissions_group_id_b120cbf9 ON public.auth_group_permissions USING btree (group_id);


--
-- Name: auth_group_permissions_permission_id_84c5c92e; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX auth_group_permissions_permission_id_84c5c92e ON public.auth_group_permissions USING btree (permission_id);


--
-- Name: auth_permission_content_type_id_2f476e4b; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX auth_permission_content_type_id_2f476e4b ON public.auth_permission USING btree (content_type_id);


--
-- Name: auth_user_groups_group_id_97559544; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX auth_user_groups_group_id_97559544 ON public.auth_user_groups USING btree (group_id);


--
-- Name: auth_user_groups_user_id_6a12ed8b; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX auth_user_groups_user_id_6a12ed8b ON public.auth_user_groups USING btree (user_id);


--
-- Name: auth_user_user_permissions_permission_id_1fbb5f2c; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX auth_user_user_permissions_permission_id_1fbb5f2c ON public.auth_user_user_permissions USING btree (permission_id);


--
-- Name: auth_user_user_permissions_user_id_a95ead1b; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX auth_user_user_permissions_user_id_a95ead1b ON public.auth_user_user_permissions USING btree (user_id);


--
-- Name: auth_user_username_6821ab7c_like; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX auth_user_username_6821ab7c_like ON public.auth_user USING btree (username varchar_pattern_ops);


--
-- Name: django_admin_log_content_type_id_c4bce8eb; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX django_admin_log_content_type_id_c4bce8eb ON public.django_admin_log USING btree (content_type_id);


--
-- Name: django_admin_log_user_id_c564eba6; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX django_admin_log_user_id_c564eba6 ON public.django_admin_log USING btree (user_id);


--
-- Name: django_session_expire_date_a5c62663; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX django_session_expire_date_a5c62663 ON public.django_session USING btree (expire_date);


--
-- Name: django_session_session_key_c0390e0f_like; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX django_session_session_key_c0390e0f_like ON public.django_session USING btree (session_key varchar_pattern_ops);


--
-- Name: auth_group_permissions auth_group_permissio_permission_id_84c5c92e_fk_auth_perm; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.auth_group_permissions
    ADD CONSTRAINT auth_group_permissio_permission_id_84c5c92e_fk_auth_perm FOREIGN KEY (permission_id) REFERENCES public.auth_permission(id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: auth_group_permissions auth_group_permissions_group_id_b120cbf9_fk_auth_group_id; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.auth_group_permissions
    ADD CONSTRAINT auth_group_permissions_group_id_b120cbf9_fk_auth_group_id FOREIGN KEY (group_id) REFERENCES public.auth_group(id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: auth_permission auth_permission_content_type_id_2f476e4b_fk_django_co; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.auth_permission
    ADD CONSTRAINT auth_permission_content_type_id_2f476e4b_fk_django_co FOREIGN KEY (content_type_id) REFERENCES public.django_content_type(id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: auth_user_groups auth_user_groups_group_id_97559544_fk_auth_group_id; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.auth_user_groups
    ADD CONSTRAINT auth_user_groups_group_id_97559544_fk_auth_group_id FOREIGN KEY (group_id) REFERENCES public.auth_group(id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: auth_user_groups auth_user_groups_user_id_6a12ed8b_fk_auth_user_id; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.auth_user_groups
    ADD CONSTRAINT auth_user_groups_user_id_6a12ed8b_fk_auth_user_id FOREIGN KEY (user_id) REFERENCES public.auth_user(id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: auth_user_user_permissions auth_user_user_permi_permission_id_1fbb5f2c_fk_auth_perm; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.auth_user_user_permissions
    ADD CONSTRAINT auth_user_user_permi_permission_id_1fbb5f2c_fk_auth_perm FOREIGN KEY (permission_id) REFERENCES public.auth_permission(id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: auth_user_user_permissions auth_user_user_permissions_user_id_a95ead1b_fk_auth_user_id; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.auth_user_user_permissions
    ADD CONSTRAINT auth_user_user_permissions_user_id_a95ead1b_fk_auth_user_id FOREIGN KEY (user_id) REFERENCES public.auth_user(id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: comment_table comment_table_query_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.comment_table
    ADD CONSTRAINT comment_table_query_id_fkey FOREIGN KEY (query_id) REFERENCES public.doubt_table(query_id) ON DELETE CASCADE;


--
-- Name: django_admin_log django_admin_log_content_type_id_c4bce8eb_fk_django_co; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.django_admin_log
    ADD CONSTRAINT django_admin_log_content_type_id_c4bce8eb_fk_django_co FOREIGN KEY (content_type_id) REFERENCES public.django_content_type(id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: django_admin_log django_admin_log_user_id_c564eba6_fk_auth_user_id; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.django_admin_log
    ADD CONSTRAINT django_admin_log_user_id_c564eba6_fk_auth_user_id FOREIGN KEY (user_id) REFERENCES public.auth_user(id) DEFERRABLE INITIALLY DEFERRED;


--
-- PostgreSQL database dump complete
--

