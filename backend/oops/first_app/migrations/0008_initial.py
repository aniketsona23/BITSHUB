# Generated by Django 5.1.2 on 2025-01-01 10:28

from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('first_app', '0007_delete_authgroup_delete_authgrouppermissions_and_more'),
    ]

    operations = [
        migrations.CreateModel(
            name='AuthGroup',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=150, unique=True)),
            ],
            options={
                'db_table': 'auth_group',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthGroupPermissions',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
            ],
            options={
                'db_table': 'auth_group_permissions',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthPermission',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('codename', models.CharField(max_length=100)),
            ],
            options={
                'db_table': 'auth_permission',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128)),
                ('last_login', models.DateTimeField(blank=True, null=True)),
                ('is_superuser', models.BooleanField()),
                ('username', models.CharField(max_length=150, unique=True)),
                ('first_name', models.CharField(max_length=150)),
                ('last_name', models.CharField(max_length=150)),
                ('email', models.CharField(max_length=254)),
                ('is_staff', models.BooleanField()),
                ('is_active', models.BooleanField()),
                ('date_joined', models.DateTimeField()),
            ],
            options={
                'db_table': 'auth_user',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthUserGroups',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
            ],
            options={
                'db_table': 'auth_user_groups',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthUserUserPermissions',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
            ],
            options={
                'db_table': 'auth_user_user_permissions',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='CommentTable',
            fields=[
                ('query_id', models.IntegerField(blank=True, null=True)),
                ('comment_id', models.AutoField(primary_key=True, serialize=False)),
                ('email', models.CharField(max_length=255)),
                ('comment', models.TextField()),
                ('timestamp', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'comment_table',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoAdminLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('action_time', models.DateTimeField()),
                ('object_id', models.TextField(blank=True, null=True)),
                ('object_repr', models.CharField(max_length=200)),
                ('action_flag', models.SmallIntegerField()),
                ('change_message', models.TextField()),
            ],
            options={
                'db_table': 'django_admin_log',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoContentType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('app_label', models.CharField(max_length=100)),
                ('model', models.CharField(max_length=100)),
            ],
            options={
                'db_table': 'django_content_type',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoMigrations',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('app', models.CharField(max_length=255)),
                ('name', models.CharField(max_length=255)),
                ('applied', models.DateTimeField()),
            ],
            options={
                'db_table': 'django_migrations',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoSession',
            fields=[
                ('session_key', models.CharField(max_length=40, primary_key=True, serialize=False)),
                ('session_data', models.TextField()),
                ('expire_date', models.DateTimeField()),
            ],
            options={
                'db_table': 'django_session',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DoubtTable',
            fields=[
                ('student_id', models.IntegerField(blank=True, null=True)),
                ('course_id', models.CharField(max_length=4)),
                ('topic_id', models.IntegerField(blank=True, null=True)),
                ('ta_id', models.IntegerField(blank=True, null=True)),
                ('query_id', models.AutoField(primary_key=True, serialize=False)),
                ('query', models.TextField()),
                ('ans', models.TextField(blank=True, null=True)),
                ('status', models.BooleanField(blank=True, null=True)),
                ('votes', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'doubt_table',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='FacultyTable',
            fields=[
                ('faculty_id', models.CharField(max_length=3)),
                ('email', models.CharField(max_length=255)),
                ('course_id', models.CharField(max_length=4)),
                ('faculty_uuid', models.UUIDField(primary_key=True, serialize=False)),
            ],
            options={
                'db_table': 'faculty_table',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='StudentTable',
            fields=[
                ('student_id', models.IntegerField()),
                ('email', models.CharField(max_length=255)),
                ('course_id', models.CharField(max_length=4)),
                ('student_uuid', models.UUIDField(primary_key=True, serialize=False)),
                ('upvoted_comments', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'student_table',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='TaTable',
            fields=[
                ('ta_id', models.IntegerField()),
                ('email', models.CharField(max_length=255)),
                ('course_id', models.CharField(max_length=4)),
                ('topic_id', models.IntegerField(blank=True, null=True)),
                ('ta_uuid', models.UUIDField(primary_key=True, serialize=False)),
            ],
            options={
                'db_table': 'ta_table',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='TopicsTable',
            fields=[
                ('course_id', models.CharField(max_length=4, primary_key=True, serialize=False)),
                ('topics', models.TextField()),
                ('topic_ids', models.TextField()),
            ],
            options={
                'db_table': 'topics_table',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='UserTable',
            fields=[
                ('email', models.CharField(max_length=255, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=255)),
                ('role', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'user_table',
                'managed': False,
            },
        ),
    ]
